package ProblemStatements;

public class MyQueue<T> {
	
	private T[] data = null;
	private int front = -1;
	private int rear = -1;
	private int size = 10;
	
	public MyQueue(){
		data = (T[]) new Object[this.size];
	}
	
	public MyQueue(int size){
		this.size=size;
		data = (T[]) new Object[this.size];
	}
	
	public boolean isEmpty(){
		if(front==-1)
			return true;
		return false;
	}
	
	public boolean isFull(){
		if(rear==size-1)
			return true;
		return false;
	}
	
	public void enque(T val){
		if(isFull()){
			System.out.println("Queue is full");
			return;
		}
		data[++rear] = val;
		if(front==-1)
			front++;
	}
	
	public T dequeue(){
		if(isEmpty()){
			System.out.println("Queue is empty");
			return null;
		}
		
		return data[front++];
	}
	
	public int count(){
		if(isEmpty())
			return 0;
		return rear-front;
	}
	
	
}
