<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="onejar" name="ConsumerOfJars">
	<taskdef name="one-jar" classname="com.simontuffs.onejar.ant.OneJarTask" onerror="report" />
	<property environment="env"/>
	<property name="ECLIPSE_HOME" value="../../eclipse-jee-juno-SR1-win32-x86_64/eclipse"/>
	<property name="junit.output.dir" value="junit"/>
	<property name="debuglevel" value="source,lines,vars"/>
	<property name="target" value="1.7"/>
	<property name="source" value="1.7"/>
	<property name="bin"  value="bin"/>
	<property name="dist"  value="dist"/>
	<property name="lib"  value="lib"/>

	<path id="JUnit 4.libraryclasspath">
		<pathelement location="${lib}/junit.jar"/>
		<pathelement location="${lib}/org.hamcrest.core_1.1.0.v20090501071000.jar"/>
	</path>
	<path id="ConsumerOfJars.classpath">
		<pathelement location="${bin}"/>
		<path refid="JUnit 4.libraryclasspath"/>
	</path>

	<target name="init" depends="clean">
		<mkdir dir="${bin}"/>
		<mkdir dir="${dist}"/>
		<mkdir dir="${lib}"/>
		<copy includeemptydirs="false" todir="${bin}">
			<fileset dir="src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="${lib}">
			<fileset dir="${ECLIPSE_HOME}/plugins/org.junit_4.10.0.v4_10_0_v20120426-0900">
				<include name="junit.jar" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="${lib}">
			<fileset dir="${ECLIPSE_HOME}/plugins">
				<include name="org.hamcrest.core_1.1.0.v20090501071000.jar" />
			</fileset>
		</copy>
	</target>

	<target name="clean">
		<delete dir="${bin}"/>
		<delete dir="${dist}"/>
		<delete dir="${lib}"/>
	</target>

	<target depends="clean" name="cleanall"/>
	<target depends="build-subprojects,build-project" name="build"/>
	<target name="build-subprojects"/>
	<target depends="init" name="build-project">
		<echo message="${ant.project.name}: ${ant.file}"/>
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
			<src path="src"/>
			<classpath refid="ConsumerOfJars.classpath"/>
		</javac>
	</target>
	<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
	<target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
		<copy todir="${ant.library.dir}">
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
		</copy>
		<unzip dest="${ant.library.dir}">
			<patternset includes="jdtCompilerAdapter.jar"/>
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
		</unzip>
	</target>
	<target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
		<antcall target="build"/>
	</target>
	<target name="consumer"  depends="build">
		<java classname="consumerPackage.consumer" failonerror="true" fork="yes">
			<classpath refid="ConsumerOfJars.classpath"/>
		</java>
	</target>
	<target name="TestCase1">
		<mkdir dir="${junit.output.dir}"/>
		<junit fork="yes" printsummary="withOutAndErr">
			<formatter type="xml"/>
			<test name="testPackage.TestCase1" todir="${junit.output.dir}"/>
			<classpath refid="ConsumerOfJars.classpath"/>
		</junit>
	</target>
	<target name="testPackage">
		<mkdir dir="${junit.output.dir}"/>
		<junit fork="yes" printsummary="withOutAndErr">
			<formatter type="xml"/>
			<test name="testPackage.TestCase1" todir="${junit.output.dir}"/>
			<classpath refid="ConsumerOfJars.classpath"/>
		</junit>
	</target>
	<target name="junitreport">
		<junitreport todir="${junit.output.dir}">
			<fileset dir="${junit.output.dir}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${junit.output.dir}"/>
		</junitreport>
	</target>

	<target name="mainjar" depends="build">
		<jar jarfile="dist/main.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Build-Date" value="${timestamp}"/>
				<attribute name="Main-Class" value="consumerPackage.consumer"/>
			</manifest>
			<fileset dir="bin">
				<include name="**/*.class"/>
			</fileset>
		</jar>
	</target>

	<target name="onejar" depends="mainjar">

		<!-- Construct the One-JAR file -->
		<one-jar destfile="dist/one.jar">
			<main jar="dist/main.jar">
			</main>
			<lib>
				<fileset dir="lib" />
			</lib>
		</one-jar>
		<delete file="dist/main.jar"/>
	</target>
</project>
